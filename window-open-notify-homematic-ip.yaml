blueprint:
  name: Set window open mode on HomeMatic thermostats
  description:
    An automation blueprint that reduces the set temperature of your climate
    device or group if a window sensor is open for more than the preset wait time.
    It uses the Homematic window sensor channel to set the temperature to the "Open-window
    temperature" set in the device configuration. You should set the "Mode for temperature
    fall detection" to Inactive to avoid conflicts. It waits until the window is closed
    again in order to restore the climate entity temperature after 5 seconds. It has an optional blocking
    entity to prevent the automation running unnecessarily, for example during the
    Summer season.
  source_url: https://gist.github.com/akloeckner/8e10ccc4fd5325a2dff95abb6886c943
  domain: automation
  input:
    window_entities:
      name: Window or door sensors
      description: The sensors that will control the climate entity
      selector:
        entity:
          filter:
            domain: binary_sensor
            device_class:
              - window
              - door
              - garage_door
              - opening
          multiple: true
    climate_entity:
      name: HomeMatic climate device
      description: The climate entity that is controlled by the window sensor
      selector:
        entity:
          filter:
            domain: climate
            integration: homematicip_local
          multiple: false
    open_delay:
      name: Windows open delay
      description: Time to delay after windows open before reducing heating
      default:
        minutes: 10
      selector:
        duration:
    close_delay:
      name: Windows close delay
      description: Time to delay after windows close before reducing heating
      default:
        seconds: 5
      selector:
        duration:
    conditions:
      name: Additional conditions to check
      description: >
        The automation will only run, if all conditions are true. The variables
        `window_entities` and `climate_entity` are available to be used in templates.
      default: []
      selector:
        condition:

mode: restart
max_exceeded: silent

trigger_variables:
  window_entities: !input window_entities
triggers:
  - alias: Windows open
    trigger: template
    id: open
    for: !input open_delay
    value_template: |-
      {{
        window_entities
        | expand
        | selectattr('state', 'eq', 'on')
        | list
        | count
        > 0
      }}
  - alias: Windows close
    trigger: template
    id: close
    for: !input close_delay
    value_template: |-
      {{
        window_entities
        | expand
        | selectattr('state', 'eq', 'on')
        | list
        | count
        <= 0
      }}

variables:
  climate_entity: !input climate_entity
  climate_id: "{{ device_id(climate_entity) }}"
conditions: !input conditions

actions:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - open
        sequence:
          - service: homematicip_local.set_device_value
            data:
              << : &window_state
                device_id: "{{ climate_id }}"
                channel: 1
                parameter: WINDOW_STATE
                value_type: int
              value: "1"
      - conditions:
          - condition: trigger
            id:
              - close
        sequence:
          - service: homematicip_local.set_device_value
            data:
              << : *window_state
              value: "0"
